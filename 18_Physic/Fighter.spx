var (
	moving bool
	moveSpeed float64
	jumpSpeed float64
	isDrawRect bool
	drawRadius float64
	oldsps []Sprite
)

func onSpritesTouched(sps []Sprite) {
	if(oldsps != nil){
		for _, sp := range oldsps {
			if( sp != nil){
				sp.setGraphicEffect BrightnessEffect, 0
			}
		}
	}
	oldsps = sps
	for _, sp := range sps {
		if( sp != nil){
			sp.setGraphicEffect BrightnessEffect, 100
		}
	}
}

onStart => {
	Camera.Follow this
	for {
		WaitNextFrame
	}
}

onStart =>{
    forever =>{
		if moving {
		    animate "walk"
		}
	}
}

onKey KeyC, => {
	isDrawRect = !isDrawRect
}

onKey KeyI, =>{
	drawRadius +=10
}
onKey KeyU, =>{
	drawRadius -=10
}

onStart =>{
	wait 0.3
	drawRadius = 50
	for{
		x , y := mouseX, mouseY
		if(isDrawRect){
			debugDrawRect(x, y, drawRadius *2,drawRadius*2, HSB(1,100,100))
			sps := checkCollision(x, y, drawRadius *2,drawRadius*2)
			onSpritesTouched(sps)
		}else{
			debugDrawCircle(x, y, drawRadius, HSB(50,100,100))
			sps := checkCollision(x, y, drawRadius)
			onSpritesTouched(sps)
		}
		WaitNextFrame
	}
}

onStart =>{
	moveSpeed = 160
	jumpSpeed := 430.0

	forever =>{
		moving = false
		vx, vy := velocity
		isOnGround := IsOnFloor()
		if keyPressed (KeyA) {
			moving = true
			SetHeading 180
			SetVelocity(-moveSpeed, vy)
		}
		if keyPressed (KeyD) {
			moving = true
			SetHeading 0
			SetVelocity(moveSpeed, vy)
		}
		if ( keyPressed (KeyJ)  ||  keyPressed (KeySpace) ) && isOnGround  {
			moving = true
			SetVelocity(vx, jumpSpeed)
		}
		if(!moving){
			SetVelocity (0, vy)
		}
	}
}
