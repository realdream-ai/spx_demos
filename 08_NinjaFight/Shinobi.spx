var (
	attacking bool
	dead      bool
	count     uint8
)

func doDie() {
	dead = true
	removeShinobi(this) // 将当前 Shinobi 从列表中移除
	die
}

func attack() {
	if dead || attacking {
		return
	}

	attacking = true
	if checkAttack(heading(), xpos(), ypos(), Fighter.xpos(), Fighter.ypos(), false) {
		println "attacking Fighter"
		broadcast "attack Fighter", heading()
	}
	animate "attack"
	attacking = false
}

onCloned => {
	// shinobis = append(shinobis, this)
	addShinobi(this)
	println "shinobis num", len(shinobis)

	dead = false
	show
	for {
		if dead {
			break
		}
		distance := rand(10, 120)
		wait rand(0.5, 1.5)
		step distance
		wait 0.5
		attack
		changeHeading 180
		step distance
		wait 0.5
		attack
		changeHeading 180
	}
}

onMsg (msg, data) => {
	if msg != "attack" && msg != "attack ypa" {
		return
	}
	if shinobi, ok := data.(*Shinobi); !ok || shinobi != this {
		return
	}
	if msg == "attack ypa" {
		println "广播爆炸效果"
		broadcast "explosion", data.(*Shinobi)
	}
	doDie
	wait 0.5
}

onMsg "end", => {
	hide
	doDie
}

onStart => {
	hide

	for {
		if len(shinobis) < 5 {
			clone
		}
		wait 3
	}
}
