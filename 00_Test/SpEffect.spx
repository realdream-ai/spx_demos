import "fmt"
import "math"

import "fmt"
func effectTest(eff EffectKind, start, end float64, step float64, waitTime float64) {
    for i := start; i <= end; i += step {
        setGraphicEffect eff, i
        say fmt.Sprintf("test %d i=%.0f", eff, i)
        wait waitTime
    }
	say "done"
	wait 0.5
	ClearGraphicEffects
}
func testCloneEffect() {
	wait 0.5
	setGraphicEffect ColorEffect, 100
	wait 0.1
	cloneNum++
	clone 

	wait 0.5
	setGraphicEffect PixelateEffect, 50
	wait 0.1
	clone 
	cloneNum++

	wait 0.5
}


onCloned => {
	// test effect clone 
	setXpos 100*float64(cloneNum)
	say fmt.Sprintf("cloned %d", cloneNum)
	wait 3
	deleteThisClone
}

onMsg "testEffect", => {
	onTestStart(this)

    setSize 1

    // 1. string
    say "testEffect"
    wait 0.1

	setXpos -100
	testCloneEffect()

	effectTest(ColorEffect, -200, 200, 20, 0.05)
	effectTest(FishEyeEffect, -150, 150, 5, 0.05)
	effectTest(WhirlEffect, -300, 300, 15, 0.05)
	effectTest(PixelateEffect, -100, 100, 4, 0.05)
	effectTest(MosaicEffect, -10, 100, 1, 0.05)
	effectTest(BrightnessEffect, -100, 100, 5, 0.05)
	effectTest(GhostEffect, 0, 100, 5, 0.05)

	onTestDone(this)
}